prog: FUNC ID LPAREN ID T_BOOL LSQUARE WHILE
##
## Ends in an error in state: 21.
##
## array_type -> T_BOOL LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_BOOL LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_BOOL WHILE
##
## Ends in an error in state: 20.
##
## any_type -> T_BOOL . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_BOOL . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_BOOL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_CHAR LSQUARE WHILE
##
## Ends in an error in state: 18.
##
## array_type -> T_CHAR LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_CHAR LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_CHAR WHILE
##
## Ends in an error in state: 17.
##
## any_type -> T_CHAR . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_CHAR . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_CHAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_FLOAT LSQUARE WHILE
##
## Ends in an error in state: 15.
##
## array_type -> T_FLOAT LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_FLOAT LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_FLOAT WHILE
##
## Ends in an error in state: 14.
##
## any_type -> T_FLOAT . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_FLOAT . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_FLOAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_INT LSQUARE WHILE
##
## Ends in an error in state: 12.
##
## array_type -> T_INT LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_INT LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_INT WHILE
##
## Ends in an error in state: 11.
##
## any_type -> T_INT . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_INT . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_STRING LSQUARE WHILE
##
## Ends in an error in state: 9.
##
## array_type -> T_STRING LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_STRING LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_STRING WHILE
##
## Ends in an error in state: 8.
##
## any_type -> T_STRING . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_STRING . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID COMMA WHILE
##
## Ends in an error in state: 31.
##
## separated_nonempty_list(COMMA,param) -> param COMMA . separated_nonempty_list(COMMA,param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## param COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID LSQUARE RSQUARE LSQUARE WHILE
##
## Ends in an error in state: 24.
##
## array_type -> array_type LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## array_type LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID LSQUARE RSQUARE WHILE
##
## Ends in an error in state: 23.
##
## any_type -> array_type . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> array_type . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## array_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID LSQUARE WHILE
##
## Ends in an error in state: 6.
##
## array_type -> T_VOID LSQUARE . RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_VOID LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID SEMICOLON
##
## Ends in an error in state: 30.
##
## separated_nonempty_list(COMMA,param) -> param . [ RPAREN ]
## separated_nonempty_list(COMMA,param) -> param . COMMA separated_nonempty_list(COMMA,param) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## param
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 5, spurious reduction of production any_type -> T_VOID 
## In state 26, spurious reduction of production param -> ID any_type 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID T_VOID WHILE
##
## Ends in an error in state: 5.
##
## any_type -> T_VOID . [ SEMICOLON RPAREN EQUALS COMMA ]
## array_type -> T_VOID . LSQUARE RSQUARE [ SEMICOLON RPAREN LSQUARE EQUALS COMMA ]
##
## The known suffix of the stack is as follows:
## T_VOID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN ID WHILE
##
## Ends in an error in state: 4.
##
## param -> ID . any_type [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_BOOL LBRACE RBRACE WHILE
##
## Ends in an error in state: 174.
##
## list(func) -> func . list(func) [ EOF ]
##
## The known suffix of the stack is as follows:
## func
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_BOOL WHILE
##
## Ends in an error in state: 169.
##
## func -> FUNC ID params T_BOOL . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_BOOL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_CHAR WHILE
##
## Ends in an error in state: 167.
##
## func -> FUNC ID params T_CHAR . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_CHAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_FLOAT WHILE
##
## Ends in an error in state: 165.
##
## func -> FUNC ID params T_FLOAT . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_FLOAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_INT WHILE
##
## Ends in an error in state: 163.
##
## func -> FUNC ID params T_INT . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_STRING WHILE
##
## Ends in an error in state: 161.
##
## func -> FUNC ID params T_STRING . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID EQUALS STRING WHILE
##
## Ends in an error in state: 145.
##
## assignment -> ID EQUALS expr . [ SEMICOLON ]
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## ID EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID EQUALS WHILE
##
## Ends in an error in state: 144.
##
## assignment -> ID EQUALS . expr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LPAREN RPAREN WHILE
##
## Ends in an error in state: 151.
##
## stmt -> function_call . SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## function_call
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LPAREN STRING RSQUARE
##
## Ends in an error in state: 91.
##
## function_call -> ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## ID LPAREN loption(separated_nonempty_list(COMMA,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 93, spurious reduction of production separated_nonempty_list(COMMA,expr) -> expr 
## In state 90, spurious reduction of production loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr) 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LPAREN WHILE
##
## Ends in an error in state: 89.
##
## function_call -> ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## ID LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LSQUARE FLOAT RSQUARE EQUALS STRING WHILE
##
## Ends in an error in state: 159.
##
## array_assign -> array_access EQUALS expr . [ SEMICOLON ]
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## array_access EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LSQUARE FLOAT RSQUARE EQUALS WHILE
##
## Ends in an error in state: 158.
##
## array_assign -> array_access EQUALS . expr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## array_access EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LSQUARE FLOAT RSQUARE WHILE
##
## Ends in an error in state: 157.
##
## array_assign -> array_access . EQUALS expr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## array_access
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LSQUARE STRING WHILE
##
## Ends in an error in state: 72.
##
## array_access -> ID LSQUARE expr . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE EQUALS DIV COMMA BNEQUALS BEQUALS ]
## expr -> expr . DIV expr [ TIMES RSQUARE PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RSQUARE PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RSQUARE PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RSQUARE PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RSQUARE PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## ID LSQUARE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID LSQUARE WHILE
##
## Ends in an error in state: 69.
##
## array_access -> ID LSQUARE . expr RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE EQUALS DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## ID LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE ID WHILE
##
## Ends in an error in state: 143.
##
## array_access -> ID . LSQUARE expr RSQUARE [ EQUALS ]
## assignment -> ID . EQUALS expr [ SEMICOLON ]
## function_call -> ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE IF LPAREN STRING BEQUALS FLOAT RPAREN LBRACE RBRACE ELSE WHILE
##
## Ends in an error in state: 141.
##
## stmt -> IF LPAREN condition RPAREN block ELSE . block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## IF LPAREN condition RPAREN block ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE IF LPAREN STRING BEQUALS FLOAT RPAREN LBRACE RBRACE WHILE
##
## Ends in an error in state: 140.
##
## stmt -> IF LPAREN condition RPAREN block . ELSE block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## IF LPAREN condition RPAREN block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE IF LPAREN STRING BEQUALS FLOAT RPAREN WHILE
##
## Ends in an error in state: 139.
##
## stmt -> IF LPAREN condition RPAREN . block ELSE block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## IF LPAREN condition RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 137.
##
## stmt -> IF LPAREN . condition RPAREN block ELSE block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE IF WHILE
##
## Ends in an error in state: 136.
##
## stmt -> IF . LPAREN condition RPAREN block ELSE block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID EQUALS STRING WHILE
##
## Ends in an error in state: 130.
##
## declaration -> ID EQUALS expr . [ SEMICOLON ]
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## ID EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID EQUALS WHILE
##
## Ends in an error in state: 129.
##
## declaration -> ID EQUALS . expr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID T_VOID EQUALS STRING WHILE
##
## Ends in an error in state: 133.
##
## declaration -> ID any_type EQUALS expr . [ SEMICOLON ]
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## ID any_type EQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID T_VOID EQUALS WHILE
##
## Ends in an error in state: 132.
##
## declaration -> ID any_type EQUALS . expr [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID any_type EQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID T_VOID RPAREN
##
## Ends in an error in state: 131.
##
## declaration -> ID any_type . EQUALS expr [ SEMICOLON ]
## declaration -> ID any_type . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID any_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 5, spurious reduction of production any_type -> T_VOID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET ID WHILE
##
## Ends in an error in state: 128.
##
## declaration -> ID . any_type EQUALS expr [ SEMICOLON ]
## declaration -> ID . EQUALS expr [ SEMICOLON ]
## declaration -> ID . any_type [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE LET WHILE
##
## Ends in an error in state: 127.
##
## stmt -> LET . declaration SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PASS SEMICOLON T_VOID
##
## Ends in an error in state: 149.
##
## list(line) -> line . list(line) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## line
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PASS WHILE
##
## Ends in an error in state: 125.
##
## stmt -> PASS . SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## PASS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PRINT STRING WHILE
##
## Ends in an error in state: 123.
##
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## stmt -> PRINT expr . SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## PRINT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PRINT WHILE
##
## Ends in an error in state: 122.
##
## stmt -> PRINT . expr SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## PRINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PRINTLN STRING WHILE
##
## Ends in an error in state: 120.
##
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## stmt -> PRINTLN expr . SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## PRINTLN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE PRINTLN WHILE
##
## Ends in an error in state: 119.
##
## stmt -> PRINTLN . expr SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## PRINTLN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LPAREN STRING WHILE
##
## Ends in an error in state: 96.
##
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> LPAREN expr . RPAREN [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LPAREN WHILE
##
## Ends in an error in state: 65.
##
## expr -> LPAREN . expr RPAREN [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LSQUARE STRING COMMA WHILE
##
## Ends in an error in state: 94.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RSQUARE RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LSQUARE STRING RPAREN
##
## Ends in an error in state: 98.
##
## expr -> LSQUARE loption(separated_nonempty_list(COMMA,expr)) . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## LSQUARE loption(separated_nonempty_list(COMMA,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 93, spurious reduction of production separated_nonempty_list(COMMA,expr) -> expr 
## In state 90, spurious reduction of production loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr) 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LSQUARE STRING WHILE
##
## Ends in an error in state: 93.
##
## expr -> expr . DIV expr [ TIMES RSQUARE RPAREN PLUS MOD MINUS DIV COMMA ]
## expr -> expr . TIMES expr [ TIMES RSQUARE RPAREN PLUS MOD MINUS DIV COMMA ]
## expr -> expr . PLUS expr [ TIMES RSQUARE RPAREN PLUS MOD MINUS DIV COMMA ]
## expr -> expr . MINUS expr [ TIMES RSQUARE RPAREN PLUS MOD MINUS DIV COMMA ]
## expr -> expr . MOD expr [ TIMES RSQUARE RPAREN PLUS MOD MINUS DIV COMMA ]
## separated_nonempty_list(COMMA,expr) -> expr . [ RSQUARE RPAREN ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RSQUARE RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN LSQUARE WHILE
##
## Ends in an error in state: 64.
##
## expr -> LSQUARE . loption(separated_nonempty_list(COMMA,expr)) RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING DIV WHILE
##
## Ends in an error in state: 85.
##
## expr -> expr DIV . expr [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING MINUS WHILE
##
## Ends in an error in state: 87.
##
## expr -> expr MINUS . expr [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING MOD WHILE
##
## Ends in an error in state: 83.
##
## expr -> expr MOD . expr [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING PLUS WHILE
##
## Ends in an error in state: 81.
##
## expr -> expr PLUS . expr [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING TIMES WHILE
##
## Ends in an error in state: 73.
##
## expr -> expr TIMES . expr [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN STRING WHILE
##
## Ends in an error in state: 117.
##
## expr -> expr . DIV expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES SEMICOLON PLUS MOD MINUS DIV ]
## stmt -> RETURN expr . SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## RETURN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_BOOL LSQUARE INT WHILE
##
## Ends in an error in state: 61.
##
## array_dec -> T_BOOL LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_BOOL LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_BOOL LSQUARE WHILE
##
## Ends in an error in state: 60.
##
## array_dec -> T_BOOL LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_BOOL LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_BOOL WHILE
##
## Ends in an error in state: 59.
##
## array_dec -> T_BOOL . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_BOOL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_CHAR LSQUARE INT WHILE
##
## Ends in an error in state: 57.
##
## array_dec -> T_CHAR LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_CHAR LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_CHAR LSQUARE WHILE
##
## Ends in an error in state: 56.
##
## array_dec -> T_CHAR LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_CHAR LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_CHAR WHILE
##
## Ends in an error in state: 55.
##
## array_dec -> T_CHAR . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_CHAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_FLOAT LSQUARE INT WHILE
##
## Ends in an error in state: 53.
##
## array_dec -> T_FLOAT LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_FLOAT LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_FLOAT LSQUARE WHILE
##
## Ends in an error in state: 52.
##
## array_dec -> T_FLOAT LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_FLOAT LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_FLOAT WHILE
##
## Ends in an error in state: 51.
##
## array_dec -> T_FLOAT . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_FLOAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_INT LSQUARE INT WHILE
##
## Ends in an error in state: 49.
##
## array_dec -> T_INT LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_INT LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_INT LSQUARE WHILE
##
## Ends in an error in state: 48.
##
## array_dec -> T_INT LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_INT LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_INT WHILE
##
## Ends in an error in state: 47.
##
## array_dec -> T_INT . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_STRING LSQUARE INT WHILE
##
## Ends in an error in state: 45.
##
## array_dec -> T_STRING LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_STRING LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_STRING LSQUARE WHILE
##
## Ends in an error in state: 44.
##
## array_dec -> T_STRING LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_STRING LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_STRING WHILE
##
## Ends in an error in state: 43.
##
## array_dec -> T_STRING . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_VOID LSQUARE INT RSQUARE LSQUARE INT WHILE
##
## Ends in an error in state: 77.
##
## array_dec -> array_dec LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## array_dec LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_VOID LSQUARE INT RSQUARE LSQUARE WHILE
##
## Ends in an error in state: 76.
##
## array_dec -> array_dec LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## array_dec LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_VOID LSQUARE INT WHILE
##
## Ends in an error in state: 41.
##
## array_dec -> T_VOID LSQUARE INT . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_VOID LSQUARE INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_VOID LSQUARE WHILE
##
## Ends in an error in state: 40.
##
## array_dec -> T_VOID LSQUARE . INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_VOID LSQUARE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN T_VOID WHILE
##
## Ends in an error in state: 39.
##
## array_dec -> T_VOID . LSQUARE INT RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN PLUS MOD MINUS LT LSQUARE LE GT GE DIV COMMA BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## T_VOID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE RETURN WHILE
##
## Ends in an error in state: 116.
##
## stmt -> RETURN . expr SEMICOLON [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## RETURN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE T_VOID
##
## Ends in an error in state: 36.
##
## block -> LBRACE . list(line) RBRACE [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID FUNC EOF ELSE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING BEQUALS FLOAT RPAREN WHILE
##
## Ends in an error in state: 114.
##
## stmt -> WHILE LPAREN condition RPAREN . block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN condition RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING BEQUALS STRING WHILE
##
## Ends in an error in state: 112.
##
## condition -> expr BEQUALS expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr BEQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING BEQUALS WHILE
##
## Ends in an error in state: 111.
##
## condition -> expr BEQUALS . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr BEQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING BNEQUALS STRING WHILE
##
## Ends in an error in state: 110.
##
## condition -> expr BNEQUALS expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr BNEQUALS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING BNEQUALS WHILE
##
## Ends in an error in state: 109.
##
## condition -> expr BNEQUALS . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr BNEQUALS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING GE STRING WHILE
##
## Ends in an error in state: 108.
##
## condition -> expr GE expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr GE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING GE WHILE
##
## Ends in an error in state: 107.
##
## condition -> expr GE . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr GE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING GT STRING WHILE
##
## Ends in an error in state: 106.
##
## condition -> expr GT expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr GT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING GT WHILE
##
## Ends in an error in state: 105.
##
## condition -> expr GT . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING LE STRING WHILE
##
## Ends in an error in state: 104.
##
## condition -> expr LE expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr LE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING LE WHILE
##
## Ends in an error in state: 103.
##
## condition -> expr LE . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr LE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING LT STRING WHILE
##
## Ends in an error in state: 102.
##
## condition -> expr LT expr . [ RPAREN ]
## expr -> expr . DIV expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . TIMES expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . PLUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MINUS expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
## expr -> expr . MOD expr [ TIMES RPAREN PLUS MOD MINUS DIV ]
##
## The known suffix of the stack is as follows:
## expr LT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING LT WHILE
##
## Ends in an error in state: 101.
##
## condition -> expr LT . expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN STRING WHILE
##
## Ends in an error in state: 100.
##
## condition -> expr . BEQUALS expr [ RPAREN ]
## condition -> expr . BNEQUALS expr [ RPAREN ]
## condition -> expr . GT expr [ RPAREN ]
## condition -> expr . GE expr [ RPAREN ]
## condition -> expr . LT expr [ RPAREN ]
## condition -> expr . LE expr [ RPAREN ]
## expr -> expr . DIV expr [ TIMES PLUS MOD MINUS LT LE GT GE DIV BNEQUALS BEQUALS ]
## expr -> expr . TIMES expr [ TIMES PLUS MOD MINUS LT LE GT GE DIV BNEQUALS BEQUALS ]
## expr -> expr . PLUS expr [ TIMES PLUS MOD MINUS LT LE GT GE DIV BNEQUALS BEQUALS ]
## expr -> expr . MINUS expr [ TIMES PLUS MOD MINUS LT LE GT GE DIV BNEQUALS BEQUALS ]
## expr -> expr . MOD expr [ TIMES PLUS MOD MINUS LT LE GT GE DIV BNEQUALS BEQUALS ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE LPAREN WHILE
##
## Ends in an error in state: 38.
##
## stmt -> WHILE LPAREN . condition RPAREN block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID LBRACE WHILE WHILE
##
## Ends in an error in state: 37.
##
## stmt -> WHILE . LPAREN condition RPAREN block [ WHILE RETURN RBRACE PRINTLN PRINT PASS LET IF ID ]
##
## The known suffix of the stack is as follows:
## WHILE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN T_VOID WHILE
##
## Ends in an error in state: 35.
##
## func -> FUNC ID params T_VOID . block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params T_VOID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN RPAREN WHILE
##
## Ends in an error in state: 34.
##
## func -> FUNC ID params . T_INT block [ FUNC EOF ]
## func -> FUNC ID params . T_FLOAT block [ FUNC EOF ]
## func -> FUNC ID params . T_BOOL block [ FUNC EOF ]
## func -> FUNC ID params . T_CHAR block [ FUNC EOF ]
## func -> FUNC ID params . T_STRING block [ FUNC EOF ]
## func -> FUNC ID params . T_VOID block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID params
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID LPAREN WHILE
##
## Ends in an error in state: 3.
##
## params -> LPAREN . param_list RPAREN [ T_VOID T_STRING T_INT T_FLOAT T_CHAR T_BOOL ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC ID WHILE
##
## Ends in an error in state: 2.
##
## func -> FUNC ID . params T_INT block [ FUNC EOF ]
## func -> FUNC ID . params T_FLOAT block [ FUNC EOF ]
## func -> FUNC ID . params T_BOOL block [ FUNC EOF ]
## func -> FUNC ID . params T_CHAR block [ FUNC EOF ]
## func -> FUNC ID . params T_STRING block [ FUNC EOF ]
## func -> FUNC ID . params T_VOID block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: FUNC WHILE
##
## Ends in an error in state: 1.
##
## func -> FUNC . ID params T_INT block [ FUNC EOF ]
## func -> FUNC . ID params T_FLOAT block [ FUNC EOF ]
## func -> FUNC . ID params T_BOOL block [ FUNC EOF ]
## func -> FUNC . ID params T_CHAR block [ FUNC EOF ]
## func -> FUNC . ID params T_STRING block [ FUNC EOF ]
## func -> FUNC . ID params T_VOID block [ FUNC EOF ]
##
## The known suffix of the stack is as follows:
## FUNC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: WHILE
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

